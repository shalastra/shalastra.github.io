<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Szymon Halastra</title><link>https://shalastra.github.io/posts/</link><description>Szymon Halastra (Posts)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 08 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://shalastra.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Reading a file with Java Stream</title><link>https://shalastra.github.io/posts/java-file-stream/</link><pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate><guid>https://shalastra.github.io/posts/java-file-stream/</guid><description>&lt;p>Since Java 8 has been released, new ways of solving common issues appeared. One of them is Stream API. Except the main purpose, which are collection manipulations, there is another purpose - file reading. &lt;br>
But before that, let&amp;rsquo;s dive in the classic way, pre-stream world.&lt;/p>
&lt;h2 id="old-way">Old way&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#f92672">&amp;lt;!&lt;/span>DOCTYPE html&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>html lang&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;en&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>head&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>meta charset&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>title&lt;span style="color:#f92672">&amp;gt;&lt;/span>Example HTML5 Document&lt;span style="color:#f92672">&amp;lt;/&lt;/span>title&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/&lt;/span>head&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>body&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>p&lt;span style="color:#f92672">&amp;gt;&lt;/span>Test&lt;span style="color:#f92672">&amp;lt;/&lt;/span>p&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/&lt;/span>body&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/&lt;/span>html&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="stream-based">Stream based&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#f92672">&amp;lt;!&lt;/span>DOCTYPE html&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>html lang&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;en&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>head&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>meta charset&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>title&lt;span style="color:#f92672">&amp;gt;&lt;/span>Example HTML5 Document&lt;span style="color:#f92672">&amp;lt;/&lt;/span>title&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/&lt;/span>head&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>body&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>p&lt;span style="color:#f92672">&amp;gt;&lt;/span>Test&lt;span style="color:#f92672">&amp;lt;/&lt;/span>p&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/&lt;/span>body&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/&lt;/span>html&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="small-improvement">Small improvement&lt;/h3>
&lt;p>Previous solution looks pretty good, right? Unfortunately, we have forgotten about one thing - closing the stream. &lt;br>
Luckily, Java provides a neat way of handling resources usage, and closing them just after we don&amp;rsquo;t need them anymore - &lt;code>try-with-resources&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#f92672">&amp;lt;!&lt;/span>DOCTYPE html&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>html lang&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;en&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>head&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>meta charset&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>title&lt;span style="color:#f92672">&amp;gt;&lt;/span>Example HTML5 Document&lt;span style="color:#f92672">&amp;lt;/&lt;/span>title&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/&lt;/span>head&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>body&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;&lt;/span>p&lt;span style="color:#f92672">&amp;gt;&lt;/span>Test&lt;span style="color:#f92672">&amp;lt;/&lt;/span>p&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/&lt;/span>body&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/&lt;/span>html&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="conclusion">Conclusion&lt;/h2></description></item><item><title>Copy CSV to Postgres database insideÂ Docker</title><link>https://shalastra.github.io/posts/postgres-docker/</link><pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate><guid>https://shalastra.github.io/posts/postgres-docker/</guid><description>&lt;p>&lt;img src="https://shalastra.github.io/img/docker_postgres.png" alt="docker-postgres">&lt;/p>
&lt;p>With Docker containers, it is easier to run services like databases without installing them locally. But how to populate the database with raw data in the CSV file?&lt;/p>
&lt;p>In this article, I want to explain that. Let&amp;rsquo;s start with the project structure.&lt;/p>
&lt;h2 id="project-structure">Project structure&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">data/
datasource.csv
db/
scripts/
1_init.sql
2_copy.sql
Dockerfile
docker-compose.yml&lt;/code>&lt;/pre>&lt;/div>
&lt;p>&lt;code>Dockerfile&lt;/code> uses postgres image and copies all *.sql files to /docker-entrypoint-initdb.d/. Later, all files are executed in alphanumerical order, that&amp;rsquo;s why *.sql files start with digits. Finally, the port 6666 is exposed.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-docker" data-lang="docker">&lt;span style="color:#66d9ef">FROM&lt;/span>&lt;span style="color:#e6db74"> postgres:alpine&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">COPY&lt;/span> *.sql /docker-entrypoint-initdb.d/&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">ADD&lt;/span> scripts/1_init.sql /docker-entrypoint-initdb.d&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">ADD&lt;/span> scripts/2_copy.sql /docker-entrypoint-initdb.d&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> chmod a+r /docker-entrypoint-initdb.d/*&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">EXPOSE&lt;/span>&lt;span style="color:#e6db74"> 6666&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>&lt;code>1_init.sql&lt;/code> creates the DB table, it has to have the same column names as in CSV file.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-SQL" data-lang="SQL">&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#66d9ef">table_name&lt;/span>
(
&lt;span style="color:#75715e">--statement body
&lt;/span>&lt;span style="color:#75715e">&lt;/span>);&lt;/code>&lt;/pre>&lt;/div>
&lt;p>&lt;code>2_copy.sql&lt;/code> is responsible for copying data from the CSV to postgres.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-SQL" data-lang="SQL">&lt;span style="color:#66d9ef">COPY&lt;/span> &lt;span style="color:#66d9ef">table_name&lt;/span> &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data/datasource.csv&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">DELIMITER&lt;/span> &lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span> CSV HEADER;&lt;/code>&lt;/pre>&lt;/div>
&lt;p>CSV the file is located in data folder inside of the project.
docker-compose.yml builds the Dockerfile from db folder and make it accessible through 5431port. As environmental properties basic postgres properties are used. And at the end data folder with CSV file is copied to the container.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-docker" data-lang="docker">version: &lt;span style="color:#e6db74">&amp;#39;3.3&amp;#39;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>services:&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span> db: &lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span> build: ./db &lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span> container_name: postgres &lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span> ports: &lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span> - &lt;span style="color:#e6db74">&amp;#34;5431:6666&amp;#34;&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span> environment: &lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span> - POSTGRES_USER&lt;span style="color:#f92672">=&lt;/span>postgres &lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span> - POSTGRES_PASSWORD&lt;span style="color:#f92672">=&lt;/span>postgres &lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span> - POSTGRES_DB&lt;span style="color:#f92672">=&lt;/span>db_name &lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span> volumes:&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span> - ./data:/data&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Only thing left is to run &lt;code>docker-compose&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">docker-compose up -d&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Urban Theory Syllabus</title><link>https://shalastra.github.io/posts/urban-theory-syllabus/</link><pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate><guid>https://shalastra.github.io/posts/urban-theory-syllabus/</guid><description>&lt;p>This post contains materials I want to learn. I divided it into two subcategories, books and courses. I know that it might be not the most comprehensive list, I have collected all pieces from different websites, mostly Reddit and Quora.&lt;/p>
&lt;h2 id="books">Books&lt;/h2>
&lt;ul>
&lt;li>&lt;em>Happy city&lt;/em> by Charles Montgomery&lt;/li>
&lt;li>&lt;em>Cities for people&lt;/em> by Jan Gehl&lt;/li>
&lt;li>&lt;em>Local Planning: Contemporary Principles and Practice&lt;/em>&lt;/li>
&lt;li>&lt;em>The Image of the City&lt;/em> by Kevin Lynch&lt;/li>
&lt;li>&lt;em>The Art of Making Cities&lt;/em> by Camillo Sitte&lt;/li>
&lt;li>&lt;em>Design of Cities&lt;/em> by Edmund Bacon&lt;/li>
&lt;li>&lt;em>Geography of No Where&lt;/em> by James Howard Kuntsler&lt;/li>
&lt;li>&lt;em>Well Tempered City&lt;/em> by Johnathon F.P. Rose&lt;/li>
&lt;li>&lt;em>Walkable City&lt;/em> by Jeff Speck&lt;/li>
&lt;li>&lt;em>Architecture and The City&lt;/em> by Aldo Rossi&lt;/li>
&lt;li>&lt;em>Notes on the synthesis of form&lt;/em> by Christopher Alexander&lt;/li>
&lt;li>&lt;em>Pattern Language&lt;/em> by Christopher Alexander&lt;/li>
&lt;li>&lt;em>Good city form&lt;/em> by Kevin Lynch&lt;/li>
&lt;li>&lt;em>Image of the city&lt;/em> by Kevin Lynch&lt;/li>
&lt;li>&lt;em>The death and life of great American Cities&lt;/em> by Jane Jacobs&lt;/li>
&lt;li>&lt;em>The production of space&lt;/em> by Henri Lefebyre&lt;/li>
&lt;li>&lt;em>Writings on cities&lt;/em> by Henri Lefebyre&lt;/li>
&lt;li>&lt;em>A City is Not a Tree&lt;/em> by Christopher Alexander&lt;/li>
&lt;li>&lt;em>Timeless Way of Building&lt;/em> by Christopher Alexander&lt;/li>
&lt;li>&lt;em>A New Theory of Urban Design&lt;/em> by Christopher Alexander&lt;/li>
&lt;li>&lt;em>Emerging Concepts of Urban Space Design&lt;/em> by Broadbent&lt;/li>
&lt;/ul>
&lt;h2 id="courses">Courses&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Future Cities&lt;/strong> &lt;br>
&lt;a href="https://www.edx.org/xseries/future-cities">https://www.edx.org/xseries/future-cities&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Making Architecture&lt;/strong> &lt;br>
&lt;a href="https://www.coursera.org/learn/making-architecture">https://www.coursera.org/learn/making-architecture&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Greening the Economy: Sustainable Cities&lt;/strong> &lt;br>
&lt;a href="https://www.coursera.org/learn/gte-sustainable-cities">https://www.coursera.org/learn/gte-sustainable-cities&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Cities are back in town : urban sociology for a globalizing urban world&lt;/strong>
&lt;a href="https://www.coursera.org/learn/urban-development">https://www.coursera.org/learn/urban-development&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Designing Cities&lt;/strong> &lt;br>
&lt;a href="https://www.coursera.org/learn/designing-cities">https://www.coursera.org/learn/designing-cities&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>A Global History of Architecture&lt;/strong> &lt;br>
&lt;a href="https://www.edx.org/course/global-history-architecture-mitx-4-605x-0">https://www.edx.org/course/global-history-architecture-mitx-4-605x-0&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>The Architectural Imagination&lt;/strong> &lt;br>
&lt;a href="https://www.edx.org/course/architectural-imagination-harvardx-gsd1x">https://www.edx.org/course/architectural-imagination-harvardx-gsd1x&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Management of Urban Infrastructures â part 1&lt;/strong> &lt;br>
&lt;a href="https://www.coursera.org/learn/managing-urban-infrastructures-1">https://www.coursera.org/learn/managing-urban-infrastructures-1&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Smart Cities â Management of Smart Urban Infrastructures&lt;/strong> &lt;br>
&lt;a href="https://www.coursera.org/learn/smart-cities">https://www.coursera.org/learn/smart-cities&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>CitiesX: The Past, Present and Future of Urban Life&lt;/strong> &lt;br>
&lt;a href="https://www.edx.org/course/citiesx-past-present-future-urban-life-harvardx-urban101x">https://www.edx.org/course/citiesx-past-present-future-urban-life-harvardx-urban101x&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Urban Design for the Public Good: Dutch Urbanism&lt;/strong> &lt;br>
&lt;a href="https://www.edx.org/course/urban-design-public-good-dutch-urbanism-delftx-urbanismx-0">https://www.edx.org/course/urban-design-public-good-dutch-urbanism-delftx-urbanismx-0&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Urban Graphics mapping GIS&lt;/strong> &lt;br>
&lt;a href="http://www.ucl.ac.uk/lifelearning/courses/urban-graphics-mapping-gis">http://www.ucl.ac.uk/lifelearning/courses/urban-graphics-mapping-gis&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Urban Design&lt;/strong> &lt;br>
&lt;a href="https://courses.planetizen.com/track/urban-design">https://courses.planetizen.com/track/urban-design&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Sustainable Urban Development&lt;/strong> &lt;br>
&lt;a href="https://www.edx.org/course/sustainable-urban-development-0">https://www.edx.org/course/sustainable-urban-development-0&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Quality of Life: Livability in Future Cities&lt;/strong> &lt;br>
&lt;a href="https://www.edx.org/course/quality-life-livability-future-cities-ethx-fc-02x-1">https://www.edx.org/course/quality-life-livability-future-cities-ethx-fc-02x-1&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Sustainability in Architecture: An Interdisciplinary Introduction&lt;/strong> &lt;br>
&lt;a href="https://www.edx.org/course/sustainability-in-architecture-an-interdisciplinary-introduction-0">https://www.edx.org/course/sustainability-in-architecture-an-interdisciplinary-introduction-0&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ecodesign for Cities and Suburbs&lt;/strong> &lt;br>
&lt;a href="https://www.edx.org/course/ecodesign-cities-suburbs-ubcx-ecodesignx-0">https://www.edx.org/course/ecodesign-cities-suburbs-ubcx-ecodesignx-0&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Rethink the City: New Approaches to Global and Local Urban Challenges&lt;/strong> &lt;br>
&lt;a href="https://www.edx.org/course/rethink-city-new-approaches-global-local-delftx-rtc1-0">https://www.edx.org/course/rethink-city-new-approaches-global-local-delftx-rtc1-0&lt;/a>&lt;/p>
&lt;p>LOT OF COURSES ARE AVAILABLE HERE: &lt;a href="https://courses.planetizen.com/">https://courses.planetizen.com/&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>Here is my old post on Reddit, from the time I thought about becoming an Urban Designer. Even if my goal had switched, I still think it is valuable source of materials and knowledge.&lt;/p>
&lt;p>&lt;a href="https://www.reddit.com/r/urbandesign/comments/91h5qy/becoming_an_urban_designer/">https://www.reddit.com/r/urbandesign/comments/91h5qy/becoming_an_urban_designer/&lt;/a>&lt;/p></description></item><item><title>Hello world!</title><link>https://shalastra.github.io/posts/hello-world/</link><pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate><guid>https://shalastra.github.io/posts/hello-world/</guid><description>&lt;p>Introduction will be short. I will use this blog to share about cool things, not only about programming, but also from urbanism and city-related issues. My goal is to, through data engineering and urban theory, merge those topics and create some interesting projects.&lt;/p></description></item></channel></rss>